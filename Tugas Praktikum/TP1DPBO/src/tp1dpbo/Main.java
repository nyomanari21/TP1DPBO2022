/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tp1dpbo;

import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer Laptop
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    dbConnection dbcon = new dbConnection();
    int autor = 1;
    private Boolean isUpdate = false;
    private int selectedID = -1;
    private ArrayList<Autor> listAutor;
    private ArrayList<Buku> listBuku;
    
    
    public Main() {
        initComponents();
        //ambil data autor dan buku
        tabelAutor.setModel(dbcon.readAutor());
        tabelBuku.setModel(dbcon.readBuku());
        
        //button update, delete, dan cancel di sembunyikan dahulu
        btnDelete.setVisible(false);
        btnUpdate.setVisible(false);
        btnCancel.setVisible(false);
        
        //label dan textfield untuk buku di sembunyikan dahulu
        labelJumlahBuku.setVisible(true);
        txtFieldJumlahBuku.setVisible(true);
        labelPenerbit.setVisible(false);
        txtFieldPenerbit.setVisible(false);
        labelDeskripsi.setVisible(false);
        txtFieldDeskripsi.setVisible(false);
        labelBuku.setVisible(false);
        labelAutor.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuku = new javax.swing.JButton();
        btnAutor = new javax.swing.JButton();
        btnSwitch = new javax.swing.JButton();
        scPanelAutor = new javax.swing.JScrollPane();
        tabelAutor = new javax.swing.JTable();
        scPanelBuku = new javax.swing.JScrollPane();
        tabelBuku = new javax.swing.JTable();
        labelImage = new javax.swing.JLabel();
        txtFieldImage = new javax.swing.JTextField();
        labelNamaAutor = new javax.swing.JLabel();
        txtFieldNamaAutor = new javax.swing.JTextField();
        labelJumlahBuku = new javax.swing.JLabel();
        txtFieldJumlahBuku = new javax.swing.JTextField();
        labelPenerbit = new javax.swing.JLabel();
        txtFieldPenerbit = new javax.swing.JTextField();
        labelDeskripsi = new javax.swing.JLabel();
        txtFieldDeskripsi = new javax.swing.JTextField();
        labelBuku = new javax.swing.JLabel();
        labelAutor = new javax.swing.JLabel();
        labelTabelAutor = new javax.swing.JLabel();
        labelTabelBuku = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBuku.setText("Add Buku");
        btnBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBukuActionPerformed(evt);
            }
        });

        btnAutor.setText("Add Author");
        btnAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAutorActionPerformed(evt);
            }
        });

        btnSwitch.setText("Switch");
        btnSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwitchActionPerformed(evt);
            }
        });

        tabelAutor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Image", "Nama", "Jumlah Buku"
            }
        ));
        tabelAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelAutorMouseClicked(evt);
            }
        });
        scPanelAutor.setViewportView(tabelAutor);

        tabelBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Image", "Penerbit", "Autor", "Deskripsi"
            }
        ));
        tabelBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBukuMouseClicked(evt);
            }
        });
        scPanelBuku.setViewportView(tabelBuku);

        labelImage.setText("Image");

        txtFieldImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldImageActionPerformed(evt);
            }
        });

        labelNamaAutor.setText("Nama Autor");

        txtFieldNamaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldNamaAutorActionPerformed(evt);
            }
        });

        labelJumlahBuku.setText("Jumlah Buku");

        labelPenerbit.setText("Penerbit");

        txtFieldPenerbit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldPenerbitActionPerformed(evt);
            }
        });

        labelDeskripsi.setText("Deksripsi");

        txtFieldDeskripsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDeskripsiActionPerformed(evt);
            }
        });

        labelBuku.setText("Buku");

        labelAutor.setText("Autor");

        labelTabelAutor.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        labelTabelAutor.setText("Tabel Autor");

        labelTabelBuku.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        labelTabelBuku.setText("Tabel Buku");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTabelAutor)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scPanelAutor, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTabelBuku)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scPanelBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAutor)
                    .addComponent(labelImage)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(labelAutor)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelBuku))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(labelNamaAutor)
                                .addComponent(labelJumlahBuku))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtFieldNamaAutor, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(txtFieldImage)
                                .addComponent(txtFieldJumlahBuku))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelPenerbit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtFieldPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(labelDeskripsi)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFieldDeskripsi)))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnBuku)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSwitch))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnDelete)
                            .addGap(18, 18, 18)
                            .addComponent(btnUpdate)
                            .addGap(18, 18, 18)
                            .addComponent(btnCancel))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuku)
                    .addComponent(btnSwitch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAutor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnCancel))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAutor)
                    .addComponent(labelBuku))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelImage)
                    .addComponent(labelPenerbit)
                    .addComponent(txtFieldPenerbit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNamaAutor)
                    .addComponent(txtFieldNamaAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDeskripsi)
                    .addComponent(txtFieldDeskripsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelJumlahBuku)
                    .addComponent(txtFieldJumlahBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelTabelAutor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scPanelAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTabelBuku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scPanelBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBukuActionPerformed
        // TODO add your handling code here:
        //menambahkan data buku
        if(!txtFieldImage.getText().isEmpty() && !txtFieldPenerbit.getText().isEmpty()
                && !txtFieldNamaAutor.getText().isEmpty() && !txtFieldDeskripsi.getText().isEmpty()){
            String image = txtFieldImage.getText();
            String penerbit = txtFieldPenerbit.getText();
            String autor = txtFieldNamaAutor.getText();
            String deskripsi = txtFieldDeskripsi.getText();
            dbcon.Query("insert into buku (img, penerbit, autor, deskripsi)"
                    + "values ('" + image + "', '" + penerbit + "', '" + autor + "','" + deskripsi + "');");
            
            tabelBuku.setModel(dbcon.readBuku());
            JOptionPane.showMessageDialog(null, "Data Buku berhasil ditambahkan!");
        }
        //bersihkan semua text field
        txtFieldImage.setText(null);
        txtFieldNamaAutor.setText(null);
        txtFieldJumlahBuku.setText(null);
        txtFieldPenerbit.setText(null);
        txtFieldDeskripsi.setText(null);
    }//GEN-LAST:event_btnBukuActionPerformed

    private void btnAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAutorActionPerformed
        // TODO add your handling code here:
        //menambahkan data autor
        if(!txtFieldImage.getText().isEmpty() && !txtFieldNamaAutor.getText().isEmpty()
                && !txtFieldJumlahBuku.getText().isEmpty()){
            String image = txtFieldImage.getText();
            String autor = txtFieldNamaAutor.getText();
            String jumlah_buku = txtFieldJumlahBuku.getText();
            dbcon.Query("insert into autor (img, nama, jumlah_buku) "
                    + "values ('" + image + "', '" + autor + "', '" + jumlah_buku + "');");
            
            tabelAutor.setModel(dbcon.readAutor());            
            JOptionPane.showMessageDialog(null, "Data Autor berhasil ditambahkan!");
        }
        //bersihkan semua text field
        txtFieldImage.setText(null);
        txtFieldNamaAutor.setText(null);
        txtFieldJumlahBuku.setText(null);
        txtFieldPenerbit.setText(null);
        txtFieldDeskripsi.setText(null);
    }//GEN-LAST:event_btnAutorActionPerformed

    private void btnSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwitchActionPerformed
        // TODO add your handling code here: 
        //set label dan text field yang visible ketika switch ke author
        if(autor == 0){
            labelJumlahBuku.setVisible(true);
            txtFieldJumlahBuku.setVisible(true);
            labelPenerbit.setVisible(false);
            txtFieldPenerbit.setVisible(false);
            labelDeskripsi.setVisible(false);
            txtFieldDeskripsi.setVisible(false);
            labelBuku.setVisible(false);
            labelAutor.setVisible(true);
            autor = 1;
        }
        //set label dan text field yang visible ketika switch ke buku
        else if(autor == 1){
            labelJumlahBuku.setVisible(false);
            txtFieldJumlahBuku.setVisible(false);
            labelPenerbit.setVisible(true);
            txtFieldPenerbit.setVisible(true);
            labelDeskripsi.setVisible(true);
            txtFieldDeskripsi.setVisible(true);
            labelBuku.setVisible(true);
            labelAutor.setVisible(false);
            autor = 0;
        }
    }//GEN-LAST:event_btnSwitchActionPerformed

    private void txtFieldImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldImageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldImageActionPerformed

    private void txtFieldNamaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldNamaAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldNamaAutorActionPerformed

    private void txtFieldPenerbitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldPenerbitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldPenerbitActionPerformed

    private void txtFieldDeskripsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDeskripsiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDeskripsiActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if(autor == 1){
            //ambil data
            int row = tabelAutor.getSelectedRow();
            String selectedNo = (tabelAutor.getModel().getValueAt(row, 0).toString());
            String image = txtFieldImage.getText();
            String nama = txtFieldNamaAutor.getText();
            String jumlah_buku = txtFieldJumlahBuku.getText();

            //update data

            //Update Table
            tabelBuku.setModel(dbcon.readAutor());

            System.out.println("Update Success!");
            JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
        }
        else if(autor == 0){
            
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if (isUpdate == true) {
            
            if(autor == 1){
                //Update Table
                int row = tabelAutor.getSelectedRow();
                String selectedNo = (tabelAutor.getModel().getValueAt(row, 0).toString());
                dbcon.Query("delete from autor where `id` = " + selectedNo + ";");
                
                tabelAutor.setModel(dbcon.readAutor());

                System.out.println("Delete Success!");
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            }
            else if(autor == 0){
                //Update Table
                int row = tabelBuku.getSelectedRow();
                String selectedNo = (tabelBuku.getModel().getValueAt(row, 0).toString());
                dbcon.Query("delete from buku where `id` = " + selectedNo + ";");
                
                tabelBuku.setModel(dbcon.readAutor());

                System.out.println("Delete Success!");
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            }
            
            btnDelete.setVisible(false);
            btnUpdate.setVisible(false);
            btnCancel.setVisible(false);
            this.isUpdate = false;
            
            //bersihkan semua text field
            txtFieldImage.setText(null);
            txtFieldNamaAutor.setText(null);
            txtFieldJumlahBuku.setText(null);
            txtFieldPenerbit.setText(null);
            txtFieldDeskripsi.setText(null);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        //hide tombol delete, update, dan cancel
        btnDelete.setVisible(false);
        btnUpdate.setVisible(false);
        btnCancel.setVisible(false);
        this.isUpdate = false;
        
        //bersihkan semua text field
        txtFieldImage.setText(null);
        txtFieldNamaAutor.setText(null);
        txtFieldJumlahBuku.setText(null);
        txtFieldPenerbit.setText(null);
        txtFieldDeskripsi.setText(null);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void tabelAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelAutorMouseClicked
        // TODO add your handling code here:
        this.isUpdate = true;

        //ambil data baris yang dipilih
        int row = tabelAutor.getSelectedRow();
        String selectedNo = (tabelAutor.getModel().getValueAt(row, 0).toString());
        String selectedImage = (tabelAutor.getModel().getValueAt(row, 1).toString());
        String selectedNamaAutor = (tabelAutor.getModel().getValueAt(row, 2).toString());
        String selectedJumlahBuku = (tabelAutor.getModel().getValueAt(row, 3).toString());

        /*
        for (int i = 0; i < listAutor.size(); i++) {
            if (selectedNo.equals(listAutor.get(i).getId())) {
                selectedID = i;
                break;
            }
        }
        */
        
        //set label dan text field yang visible ketika switch ke author
        labelJumlahBuku.setVisible(true);
        txtFieldJumlahBuku.setVisible(true);
        labelPenerbit.setVisible(false);
        txtFieldPenerbit.setVisible(false);
        labelDeskripsi.setVisible(false);
        txtFieldDeskripsi.setVisible(false);
        labelBuku.setVisible(false);
        labelAutor.setVisible(true);
        autor = 1;
        
        //bersihkan dahulu semua text field
        txtFieldImage.setText(null);
        txtFieldNamaAutor.setText(null);
        txtFieldJumlahBuku.setText(null);
        txtFieldPenerbit.setText(null);
        txtFieldDeskripsi.setText(null);

        //isi text field yang dibutuhkan
        txtFieldImage.setText(selectedImage);
        txtFieldNamaAutor.setText(selectedNamaAutor);
        txtFieldJumlahBuku.setText(selectedJumlahBuku);

        btnUpdate.setVisible(true);
        btnDelete.setVisible(true);
        btnCancel.setVisible(true);
    }//GEN-LAST:event_tabelAutorMouseClicked

    private void tabelBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBukuMouseClicked
        // TODO add your handling code here:
        this.isUpdate = true;

        //ambil data baris yang dipilih
        int row = tabelBuku.getSelectedRow();
        String selectedNo = (tabelBuku.getModel().getValueAt(row, 0).toString());
        String selectedImage = (tabelBuku.getModel().getValueAt(row, 1).toString());
        String selectedPenerbit = (tabelBuku.getModel().getValueAt(row, 2).toString());
        String selectedNamaAutor = (tabelBuku.getModel().getValueAt(row, 3).toString());
        String selectedDeskripsi = (tabelBuku.getModel().getValueAt(row, 4).toString());

        /*
        for (int i = 0; i < listBuku.size(); i++) {
            if (selectedNo.equals(listBuku.get(i).getId())) {
                selectedID = i;
                break;
            }
        }
        */
        
        //set label dan text field yang visible ketika switch ke buku
        labelJumlahBuku.setVisible(false);
        txtFieldJumlahBuku.setVisible(false);
        labelPenerbit.setVisible(true);
        txtFieldPenerbit.setVisible(true);
        labelDeskripsi.setVisible(true);
        txtFieldDeskripsi.setVisible(true);
        labelBuku.setVisible(true);
        labelAutor.setVisible(false);
        autor = 0;
        
        //bersihkan dahulu semua text field
        txtFieldImage.setText(null);
        txtFieldNamaAutor.setText(null);
        txtFieldJumlahBuku.setText(null);
        txtFieldPenerbit.setText(null);
        txtFieldDeskripsi.setText(null);

        //isi text field yang dibutuhkan
        txtFieldImage.setText(selectedImage);
        txtFieldNamaAutor.setText(selectedNamaAutor);
        txtFieldPenerbit.setText(selectedPenerbit);
        txtFieldDeskripsi.setText(selectedDeskripsi);

        btnUpdate.setVisible(true);
        btnDelete.setVisible(true);
        btnCancel.setVisible(true);
    }//GEN-LAST:event_tabelBukuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAutor;
    private javax.swing.JButton btnBuku;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSwitch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel labelAutor;
    private javax.swing.JLabel labelBuku;
    private javax.swing.JLabel labelDeskripsi;
    private javax.swing.JLabel labelImage;
    private javax.swing.JLabel labelJumlahBuku;
    private javax.swing.JLabel labelNamaAutor;
    private javax.swing.JLabel labelPenerbit;
    private javax.swing.JLabel labelTabelAutor;
    private javax.swing.JLabel labelTabelBuku;
    private javax.swing.JScrollPane scPanelAutor;
    private javax.swing.JScrollPane scPanelBuku;
    private javax.swing.JTable tabelAutor;
    private javax.swing.JTable tabelBuku;
    private javax.swing.JTextField txtFieldDeskripsi;
    private javax.swing.JTextField txtFieldImage;
    private javax.swing.JTextField txtFieldJumlahBuku;
    private javax.swing.JTextField txtFieldNamaAutor;
    private javax.swing.JTextField txtFieldPenerbit;
    // End of variables declaration//GEN-END:variables
}
